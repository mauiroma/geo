# context path
server.servlet.context-path: 


# this name is used by Jaeger client also
spring:
  application:
    name: 'bank service'
server:
  address: 0.0.0.0
  port: 8080
# management port
management:
  address: ${MANAGEMENT_ADDRESS:0.0.0.0}
  port: ${MANAGEMENT_PORT:8081}
  security:
    # Must be changed in production !!!
    enabled: ${MANAGEMENT_SECURITY_ENABLED:false}  
# management endpoints
  endpoint:
    health:
      enabled: true
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
# enables percentiles for HTTP requests
  metrics:
    distribution:
      percentiles:
        http:
          server:
            requests: ${METRICS_PERCENTILES:0.75, 0.9, 0.99} 
    #  percentiles-histogram:
    #    http:
    #      server: true
    export:
      prometheus:
        enabled: true
quickstart:
  generateOrderPeriod: 10s
  processOrderPeriod: 30s
# logging configuration
logging:
  config: ${LOG_CONFIG_FILE:classpath:logback.xml}

# Service properties
service:
  api:
    path: '/api/v1'

metrics:
  percentiles: 0.5,0.75,0.95
  tags:
  - name: myMetricTag1
    value: myMetricTagValue1
  - name: myMetricTag2
    value: myMetricTagValue2
tracer:
  tags:
  - name: myTracerTag1
    value: myTracerTagValue1
  - name: myTracerTag2
    value: myTracerTagValue2
  

opentracing:
  jaeger:
#    enabled: false
    service-name: ${JAEGER_SERVICE_NAME:bank-service}
    log-spans: ${JAEGER_REPORTER_LOG_SPANS:false}
    probabilistic-sampler:
      sampling-rate: ${JAEGER_SAMPLER_PARAM:1.0}
# OPENTRACING_JAEGER_UDPSENDER_PORT=16831
    udp-sender:
      host: ${JAEGER_AGENT_HOST:}
      port: ${JAEGER_AGENT_PORT:6831}
    http-sender:
      url: ${JAEGER_ENDPOINT:}
      username: ${JAEGER_USER:}
      password: ${JAEGER_PASSWORD:}
      auth-token: ${JAEGER_AUTH_TOKEN:}
      
  
# microservices url
bank.service:
  version: 1.0.0

bank.commands.url:
  create.account: ${BANK_COMMANDS_CREATE_URL:http://localhost:8081/api/v1/account} 
  readiness: ${BANK_COMMANDS_READINESS_URL:http://localhost:8081/api/v1/readiness} 
  
bank.query.url:
  list.account: ${BANK_QUERY_LIST_ACCOUNT_URL:http://localhost:8082/api/v1/account/list} 
  readiness: ${BANK_QUERY_READINESS_URL:http://localhost:8082/api/v1/readiness} 
      
      
